; üéØ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
; ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Buffered ‡∏Å‡∏±‡∏ö Unbuffered Channel
; ‡πÉ‡∏ä‡πâ select {} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° ‡∏´‡∏•‡∏≤‡∏¢ channel ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
; ‡πÉ‡∏ä‡πâ default case ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ blocking
; ‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏à‡∏£‡∏¥‡∏á

; ‚úÖ Part 1: Buffered Channel ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
; ch := make(chan int, 3) // buffered channel ‡∏à‡∏∏‡πÑ‡∏î‡πâ 3 ‡∏Ñ‡πà‡∏≤

; ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
; ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ï‡πá‡∏° ‚Üí ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ
; ‡∏ñ‡πâ‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°

; üîπ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
; func main() {
; 	ch := make(chan string, 2)
; 	ch <- "Hello"
; 	ch <- "World"
; 	// ch <- "Overflow" // ‚ùå ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô buffer ‡∏à‡∏∞‡∏ö‡∏•‡πá‡∏≠‡∏Å

; 	fmt.Println(<-ch)
; 	fmt.Println(<-ch)
; }

; ‚úÖ Part 2: Select Statement
; ‡πÉ‡∏ä‡πâ select ‡∏Å‡∏±‡∏ö channel ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô

; select {
; case msg := <-ch1:
; 	fmt.Println("‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å ch1:", msg)
; case msg := <-ch2:
; 	fmt.Println("‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å ch2:", msg)
; default:
; 	fmt.Println("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")
; }

; ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢ channel
; ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å case ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
; ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ case ‡πÑ‡∏´‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡∏¢ ‚Üí ‡∏ö‡∏•‡πá‡∏≠‡∏Å (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏°‡∏µ default)
