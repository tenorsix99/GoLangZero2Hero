package main

import (
	"context"
	"fmt"
	"io"
	"net/http"
	"time"
)

func callAPI(ctx context.Context, url string) error {
	// ‡∏™‡∏£‡πâ‡∏≤‡∏á HTTP request ‡∏û‡∏£‡πâ‡∏≠‡∏° context
	req, err := http.NewRequestWithContext(ctx, "GET", url, nil)
	if err != nil {
		return fmt.Errorf("‡∏™‡∏£‡πâ‡∏≤‡∏á request ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: %v", err)
	}

	client := &http.Client{}

	resp, err := client.Do(req)
	if err != nil {
		return fmt.Errorf("‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: %v", err)
	}
	defer resp.Body.Close()

	body, _ := io.ReadAll(resp.Body)
	fmt.Println("üì¶ ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", string(body))
	return nil
}

func main() {
	// ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Ñ‡πà 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()

	url := "https://httpbin.org/delay/3" // ‡∏à‡∏≥‡∏•‡∏≠‡∏á API ‡∏ä‡πâ‡∏≤ (delay 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)

	err := callAPI(ctx, url)
	if err != nil {
		fmt.Println("‚ùå ERROR:", err)
	} else {
		fmt.Println("‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
	}
}
